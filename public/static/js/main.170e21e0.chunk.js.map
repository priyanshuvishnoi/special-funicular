{"version":3,"sources":["pages/details.jsx","pages/form.jsx","App.js","reportWebVitals.js","index.js"],"names":["DetailsPage","history","useHistory","useState","usersDetails","setUserDetail","loading","setLoading","fetchData","a","axios","get","baseUrl","res","data","console","error","useEffect","className","map","user","name","resume","_id","onClick","e","push","FormPage","setName","phone","setPhone","email","setEmail","file","setFile","handleSubmit","preventDefault","formData","FormData","append","post","headers","status","alert","onSubmit","htmlFor","type","id","placeholder","required","value","onChange","target","files","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.170e21e0.chunk.js","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { baseUrl } from '../config.json';\n\nconst DetailsPage = () => {\n  const history = useHistory();\n  const [usersDetails, setUserDetail] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(baseUrl + '/users/getDetails');\n      setUserDetail(res.data.usersDetails);\n    } catch (err) {\n      console.error(err);\n    }\n    setLoading(false);\n  };\n\n  useEffect(() => fetchData(), []);\n\n  return (\n    <>\n      <div className=\"container\">\n        {loading ? (\n          <div className=\"center margin-top\">\n            <div className=\"loader\"></div>\n          </div>\n        ) : (\n          <>\n            <h1 className=\"heading\">Registered Candidates</h1>\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Resume Path</th>\n                </tr>\n              </thead>\n              <tbody>\n                {usersDetails.map(user => (\n                  <tr key={user._id}>\n                    <td>{user.name}</td>\n                    <td>{user.resume}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </>\n        )}\n      </div>\n      <footer>\n        <div className=\"link-btn\" onClick={e => history.push('/')}>\n          Form Page &rarr;{' '}\n        </div>\n      </footer>\n    </>\n  );\n};\n\nexport default DetailsPage;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { baseUrl } from '../config.json';\nimport { useHistory } from 'react-router-dom';\n\nconst FormPage = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const [email, setEmail] = useState('');\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('phone', phone);\n      formData.append('email', email);\n      formData.append('resume', file);\n      const response = await axios.post(\n        baseUrl + '/users/saveDetails',\n        formData,\n        {\n          headers: {\n            'Access-Control-Allow-Origin': 'http://localhost:3000',\n          },\n        }\n      );\n      if (response.status === 200) {\n        alert('Data Saved!');\n      }\n    } catch (err) {\n      console.error(err);\n      alert('Error!!!');\n    }\n    setLoading(false);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"heading form-heading\">Candidate Profile Form</h1>\n      <form onSubmit={handleSubmit}>\n        <div className=\"row1\">\n          <div className=\"col\">\n            <label htmlFor=\"name\">Full Name</label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              name=\"name\"\n              placeholder=\"Enter Candidate's Full Name\"\n              required\n              value={name}\n              onChange={e => setName(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row2\">\n          <div className=\"col\">\n            <label htmlFor=\"phone\">Mobile Number:</label>\n            <input\n              type=\"text\"\n              id=\"phone\"\n              name=\"phone\"\n              placeholder=\"Enter Mobile Number\"\n              required\n              value={phone}\n              onChange={e => setPhone(e.target.value)}\n            />\n          </div>\n\n          <div className=\"spacer\"></div>\n          <div className=\"col\">\n            <label htmlFor=\"email\">Email ID</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              placeholder=\"Email ID\"\n              required\n              value={email}\n              onChange={e => setEmail(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row3\">\n          <div className=\"col\">\n            <label htmlFor=\"resume\">\n              Resume:\n              <div className=\"custom-upload\">\n                <div className=\"custom-upload-box\">\n                  {file == null ? 'Upload Resume' : file.name}{' '}\n                </div>\n                <div className=\"custom-upload-btn\">Upload</div>\n              </div>\n            </label>\n            <input\n              type=\"file\"\n              id=\"resume\"\n              name=\"resume\"\n              className=\"file-upload\"\n              onChange={e => {\n                if (e.target.files[0].type === 'application/pdf') {\n                  setFile(e.target.files[0]);\n                } else {\n                  alert('Only pdf files are allowed');\n                }\n              }}\n              required\n            />\n          </div>\n        </div>\n        {loading ? (\n          <div className=\"center\">\n            <div className=\"loader\"></div>\n          </div>\n        ) : (\n          <div className=\"action-btn-box\">\n            <button type=\"submit\">Submit</button>\n            <button\n              type=\"reset\"\n              onClick={e => {\n                setEmail('');\n                setName('');\n                setPhone('');\n                setFile(null);\n              }}\n            >\n              Clear\n            </button>\n          </div>\n        )}\n      </form>\n      <footer>\n        <div className=\"link-btn\" onClick={e => history.push('/details')}>\n          Details Page &rarr;{' '}\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nexport default FormPage;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport DetailsPage from './pages/details';\nimport FormPage from './pages/form';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={FormPage} />\n        <Route path=\"/details\" component={DetailsPage} />\n      </Switch>\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}